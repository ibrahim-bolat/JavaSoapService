package org.example.serviceproxy;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 4.0.5
 * 2024-11-25T19:31:27.391+03:00
 * Generated source version: 4.0.5
 *
 */
@WebService(targetNamespace = "http://service.example.org/", name = "ProductService")
@XmlSeeAlso({ObjectFactory.class})
public interface ProductService {

    @WebMethod
    @RequestWrapper(localName = "createProduct", targetNamespace = "http://service.example.org/", className = "org.example.serviceproxy.CreateProduct")
    @ResponseWrapper(localName = "createProductResponse", targetNamespace = "http://service.example.org/", className = "org.example.serviceproxy.CreateProductResponse")
    @WebResult(name = "return", targetNamespace = "")
    public org.example.serviceproxy.Product createProduct(

        @WebParam(name = "product", targetNamespace = "")
        org.example.serviceproxy.Product product
    );

    @WebMethod
    @RequestWrapper(localName = "deleteProduct", targetNamespace = "http://service.example.org/", className = "org.example.serviceproxy.DeleteProduct")
    @ResponseWrapper(localName = "deleteProductResponse", targetNamespace = "http://service.example.org/", className = "org.example.serviceproxy.DeleteProductResponse")
    @WebResult(name = "Product", targetNamespace = "")
    public boolean deleteProduct(

        @WebParam(name = "id", targetNamespace = "")
        java.lang.Long ıd
    );

    @WebMethod
    @RequestWrapper(localName = "updateProduct", targetNamespace = "http://service.example.org/", className = "org.example.serviceproxy.UpdateProduct")
    @ResponseWrapper(localName = "updateProductResponse", targetNamespace = "http://service.example.org/", className = "org.example.serviceproxy.UpdateProductResponse")
    @WebResult(name = "return", targetNamespace = "")
    public org.example.serviceproxy.Product updateProduct(

        @WebParam(name = "product", targetNamespace = "")
        org.example.serviceproxy.Product product
    );

    @WebMethod
    @RequestWrapper(localName = "getProduct", targetNamespace = "http://service.example.org/", className = "org.example.serviceproxy.GetProduct")
    @ResponseWrapper(localName = "getProductResponse", targetNamespace = "http://service.example.org/", className = "org.example.serviceproxy.GetProductResponse")
    @WebResult(name = "return", targetNamespace = "")
    public org.example.serviceproxy.Product getProduct(

        @WebParam(name = "id", targetNamespace = "")
        java.lang.Long ıd
    );

    @WebMethod
    @RequestWrapper(localName = "getAllProducts", targetNamespace = "http://service.example.org/", className = "org.example.serviceproxy.GetAllProducts")
    @ResponseWrapper(localName = "getAllProductsResponse", targetNamespace = "http://service.example.org/", className = "org.example.serviceproxy.GetAllProductsResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<org.example.serviceproxy.Product> getAllProducts()
;
}
